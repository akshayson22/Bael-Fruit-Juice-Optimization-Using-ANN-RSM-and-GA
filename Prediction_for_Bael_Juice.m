function Y =PREDICTION(X1,X2,X3)

%
%coded values of X (-1 to +1) 
x(1)= (((X1-0.08)/((0.24-0.08))*2))-1;
x(2)= (((X2-30)/((60-30))*2))-1;
x(3)= (((X3-3)/((9-3))*2))-1;

% Intial weights of hidden layers (hidden layer input)
hi(1) = +1.3647*x(1) + 0.1057*x(2) - 0.2437*x(3) + 0.5523;
hi(2) = -0.9706*x(1) - 0.7845*x(2) + 0.3652*x(3) + 0.5471;
hi(3) = +1.0944*x(1) + 0.1306*x(2) + 1.0131*x(3) + 0.7806;
hi(4) = -0.2754*x(1) + 1.5495*x(2) + 0.0812*x(3) - 0.7956;
hi(5) = +0.0246*x(1) - 1.7754*x(2) - 0.0644*x(3) - 0.8396;
hi(6) = +0.1360*x(1) - 0.0930*x(2) + 1.3274*x(3) + 0.6788;
hi(7) = +1.4396*x(1) + 0.0290*x(2) - 0.2111*x(3) - 0.8792;
hi(8) = +0.7515*x(1) - 0.1436*x(2) + 1.1706*x(3) - 0.7500;


% Output weights of hidden layer (hidden layer output)
h0(1)=tansig(hi(1));
h0(2)=tansig(hi(2));
h0(3)=tansig(hi(3));
h0(4)=tansig(hi(4));
h0(5)=tansig(hi(5));
h0(6)=tansig(hi(6));
h0(7)=tansig(hi(7));
h0(8)=tansig(hi(8));


% Input weights of output layer (output layer input)
% Output neuron equations (each in one line)

yi(1) = +0.0701*h0(1) + 0.1325*h0(2) + 0.4205*h0(3) - 0.3525*h0(4) - 0.4395*h0(5) + 0.6648*h0(6) + 0.8575*h0(7) - 0.9812*h0(8) - 0.8923;
yi(2) = -0.4579*h0(1) + 0.5727*h0(2) - 0.1349*h0(3) + 0.5033*h0(4) + 0.4144*h0(5) - 0.7701*h0(6) + 0.4029*h0(7) + 0.1543*h0(8) + 0.7596;
yi(3) = +0.0885*h0(1) + 0.1204*h0(2) - 0.5782*h0(3) + 0.3260*h0(4) + 0.3922*h0(5) - 0.4838*h0(6) - 0.5822*h0(7) + 0.5764*h0(8) + 0.6095;
yi(4) = +0.3113*h0(1) + 0.1705*h0(2) - 0.9698*h0(3) + 0.2152*h0(4) + 0.2695*h0(5) - 0.0758*h0(6) - 0.4300*h0(7) + 0.4180*h0(8) + 0.4199;
yi(5) = +0.9662*h0(1) + 0.4621*h0(2) + 0.7075*h0(3) - 0.1910*h0(4) - 0.4420*h0(5) - 0.5457*h0(6) - 1.0488*h0(7) + 0.0787*h0(8) - 0.9751;
yi(6) = +0.0715*h0(1) + 0.7361*h0(2) - 0.0872*h0(3) - 1.1069*h0(4) - 1.3456*h0(5) - 0.4035*h0(6) + 0.2217*h0(7) + 0.3053*h0(8) - 0.8773;

                                  

% Output weights of output layer (output layer output)
y0(1)=purelin(yi(1));
y0(2)=purelin(yi(2));
y0(3)=purelin(yi(3));
y0(4)=purelin(yi(4));
y0(5)=purelin(yi(5));
y0(6)=purelin(yi(6));


% Output coded values to actual
Y(1) = (((y0(1) + 1) * (63 - 44)) / 2) + 44;     % output 1 scaled to [44,63]
Y(2) = (((y0(2) + 1) * (11.3 - 10.3)) / 2) + 10.3; % output 2 scaled to [10.3,11.3]
Y(3) = (((y0(3) + 1) * (2.24 - 1.97)) / 2) + 1.97; % output 3 scaled to [1.97,2.24]
Y(4) = (((y0(4) + 1) * (313 - 211)) / 2) + 211;    % output 4 scaled to [211,313]
Y(5) = (((y0(5) + 1) * (31.6 - 15.6)) / 2) + 15.6; % output 5 scaled to [15.6,31.6]
Y(6) = (((y0(6) + 1) * (5.46 - 4.12)) / 2) + 4.12; % output 6 scaled to [4.12,5.46]

end